{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AUTHENTICATE, LOGOUT, SET_DID_TRY_AL } from \"../actions/auth\";\nvar initialState = {\n  token: null,\n  userId: \"\",\n  didTryAutoLogin: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTHENTICATE:\n      return {\n        token: action.token,\n        userId: action.userId,\n        didTryAutoLogin: true\n      };\n\n    case SET_DID_TRY_AL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        didTryAutoLogin: true\n      });\n\n    case LOGOUT:\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        didTryAutoLogin: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/store/reducers/auth.js"],"names":["AUTHENTICATE","LOGOUT","SET_DID_TRY_AL","initialState","token","userId","didTryAutoLogin","state","action","type"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,EAA+BC,cAA/B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,eAAe,EAAE;AAHE,CAArB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAL;AACE,aAAO;AACLI,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KADT;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACH,MAFV;AAGLC,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAKF,SAAKJ,cAAL;AACE,6CACKK,KADL;AAEED,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAKL,MAAL;AACE,6CACKE,YADL;AAEEG,QAAAA,eAAe,EAAE;AAFnB;;AASF;AACE,aAAOC,KAAP;AAvBJ;AAyBD,CA1BD","sourcesContent":["import { AUTHENTICATE, LOGOUT, SET_DID_TRY_AL } from \"../actions/auth\";\n\nconst initialState = {\n  token: null,\n  userId: \"\",\n  didTryAutoLogin: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return {\n        token: action.token,\n        userId: action.userId,\n        didTryAutoLogin: true,\n      };\n    case SET_DID_TRY_AL:\n      return {\n        ...state,\n        didTryAutoLogin: true,\n      };\n    case LOGOUT:\n      return {\n        ...initialState,\n        didTryAutoLogin: true,\n      };\n    // case SIGNUP:\n    //   return {\n    //     token: action.token,\n    //     userId: action.userId\n    //   };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}