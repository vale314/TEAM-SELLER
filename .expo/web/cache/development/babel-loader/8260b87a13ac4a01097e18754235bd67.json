{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_BUYS } from \"../actions/buy\";\nvar initialState = {\n  buys: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_BUYS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        buys: action.buys\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/store/reducers/buy.js"],"names":["SET_BUYS","initialState","buys","state","action","type"],"mappings":";;;;;;AAAA,SAASA,QAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,QAAL;AACE,6CACKG,KADL;AAEED,QAAAA,IAAI,EAAEE,MAAM,CAACF;AAFf;AAFJ;;AAOA,SAAOC,KAAP;AACD,CATD","sourcesContent":["import { SET_BUYS } from \"../actions/buy\";\n\nconst initialState = {\n  buys: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_BUYS:\n      return {\n        ...state,\n        buys: action.buys,\n      };\n  }\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}