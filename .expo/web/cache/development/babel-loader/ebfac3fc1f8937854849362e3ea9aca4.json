{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOGGLE_FAVORITE, SET_FILTERS } from \"../actions/meals\";\nvar initialState = {\n  meals: [],\n  filteredMeals: [],\n  favoriteMeals: []\n};\n\nvar mealsReducer = function mealsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_FAVORITE:\n      var existingIndex = state.favoriteMeals.findIndex(function (meal) {\n        return meal.id === action.mealId;\n      });\n\n      if (existingIndex >= 0) {\n        var updatedFavMeals = _toConsumableArray(state.favoriteMeals);\n\n        updatedFavMeals.splice(existingIndex, 1);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          favoriteMeals: updatedFavMeals\n        });\n      } else {\n        var meal = state.meals.find(function (meal) {\n          return meal.id === action.mealId;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          favoriteMeals: state.favoriteMeals.concat(meal)\n        });\n      }\n\n    case SET_FILTERS:\n      var appliedFilters = action.filters;\n      var updatedFilteredMeals = state.meals.filter(function (meal) {\n        if (appliedFilters.glutenFree && !meal.isGlutenFree) {\n          return false;\n        }\n\n        if (appliedFilters.lactoseFree && !meal.isLactoseFree) {\n          return false;\n        }\n\n        if (appliedFilters.vegetarian && !meal.isVegetarian) {\n          return false;\n        }\n\n        if (appliedFilters.vegan && !meal.isVegan) {\n          return false;\n        }\n\n        return true;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filteredMeals: updatedFilteredMeals\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default mealsReducer;","map":{"version":3,"sources":["/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/store/reducers/meals.js"],"names":["TOGGLE_FAVORITE","SET_FILTERS","initialState","meals","filteredMeals","favoriteMeals","mealsReducer","state","action","type","existingIndex","findIndex","meal","id","mealId","updatedFavMeals","splice","find","concat","appliedFilters","filters","updatedFilteredMeals","filter","glutenFree","isGlutenFree","lactoseFree","isLactoseFree","vegetarian","isVegetarian","vegan","isVegan"],"mappings":";;;;;;;AAAA,SAASA,eAAT,EAA0BC,WAA1B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAL;AACE,UAAMU,aAAa,GAAGH,KAAK,CAACF,aAAN,CAAoBM,SAApB,CACpB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,MAA7B;AAAA,OADoB,CAAtB;;AAGA,UAAIJ,aAAa,IAAI,CAArB,EAAwB;AACtB,YAAMK,eAAe,sBAAOR,KAAK,CAACF,aAAb,CAArB;;AACAU,QAAAA,eAAe,CAACC,MAAhB,CAAuBN,aAAvB,EAAsC,CAAtC;AACA,+CAAYH,KAAZ;AAAmBF,UAAAA,aAAa,EAAEU;AAAlC;AACD,OAJD,MAIO;AACL,YAAMH,IAAI,GAAGL,KAAK,CAACJ,KAAN,CAAYc,IAAZ,CAAiB,UAACL,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,MAA7B;AAAA,SAAjB,CAAb;AACA,+CAAYP,KAAZ;AAAmBF,UAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBa,MAApB,CAA2BN,IAA3B;AAAlC;AACD;;AACH,SAAKX,WAAL;AACE,UAAMkB,cAAc,GAAGX,MAAM,CAACY,OAA9B;AACA,UAAMC,oBAAoB,GAAGd,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmB,UAACV,IAAD,EAAU;AACxD,YAAIO,cAAc,CAACI,UAAf,IAA6B,CAACX,IAAI,CAACY,YAAvC,EAAqD;AACnD,iBAAO,KAAP;AACD;;AACD,YAAIL,cAAc,CAACM,WAAf,IAA8B,CAACb,IAAI,CAACc,aAAxC,EAAuD;AACrD,iBAAO,KAAP;AACD;;AACD,YAAIP,cAAc,CAACQ,UAAf,IAA6B,CAACf,IAAI,CAACgB,YAAvC,EAAqD;AACnD,iBAAO,KAAP;AACD;;AACD,YAAIT,cAAc,CAACU,KAAf,IAAwB,CAACjB,IAAI,CAACkB,OAAlC,EAA2C;AACzC,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OAd4B,CAA7B;AAeA,6CAAYvB,KAAZ;AAAmBH,QAAAA,aAAa,EAAEiB;AAAlC;;AACF;AACE,aAAOd,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,YAAf","sourcesContent":["import { TOGGLE_FAVORITE, SET_FILTERS } from \"../actions/meals\";\n\nconst initialState = {\n  meals: [],\n  filteredMeals: [],\n  favoriteMeals: [],\n};\n\nconst mealsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_FAVORITE:\n      const existingIndex = state.favoriteMeals.findIndex(\n        (meal) => meal.id === action.mealId\n      );\n      if (existingIndex >= 0) {\n        const updatedFavMeals = [...state.favoriteMeals];\n        updatedFavMeals.splice(existingIndex, 1);\n        return { ...state, favoriteMeals: updatedFavMeals };\n      } else {\n        const meal = state.meals.find((meal) => meal.id === action.mealId);\n        return { ...state, favoriteMeals: state.favoriteMeals.concat(meal) };\n      }\n    case SET_FILTERS:\n      const appliedFilters = action.filters;\n      const updatedFilteredMeals = state.meals.filter((meal) => {\n        if (appliedFilters.glutenFree && !meal.isGlutenFree) {\n          return false;\n        }\n        if (appliedFilters.lactoseFree && !meal.isLactoseFree) {\n          return false;\n        }\n        if (appliedFilters.vegetarian && !meal.isVegetarian) {\n          return false;\n        }\n        if (appliedFilters.vegan && !meal.isVegan) {\n          return false;\n        }\n        return true;\n      });\n      return { ...state, filteredMeals: updatedFilteredMeals };\n    default:\n      return state;\n  }\n};\n\nexport default mealsReducer;\n"]},"metadata":{},"sourceType":"module"}