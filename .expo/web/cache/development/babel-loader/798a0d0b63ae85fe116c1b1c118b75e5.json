{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/screens/UserProductScreen.js\";\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../components/UI/HeaderButton\";\nimport ProductItem from \"../components/shop/ProductItem\";\nimport Colors from \"../constants/Colors\";\nimport * as productsActions from \"../store/actions/products\";\n\nvar UserProductsScreen = function UserProductsScreen(props) {\n  var userProducts = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRefreshing = _useState6[0],\n      setIsRefreshing = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var editProductHandler = function editProductHandler(id) {\n    props.navigation.navigate(\"EditProduct\", {\n      productId: id\n    });\n  };\n\n  var loadProducts = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.fetchProducts()));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 10:\n            setIsRefreshing(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    var unsubscribe = props.navigation.addListener(\"focus\", loadProducts);\n    return function () {\n      unsubscribe();\n    };\n  }, [loadProducts]);\n  useEffect(function () {\n    dispatch(productsActions.fetchProducts());\n  }, []);\n  useEffect(function () {\n    setIsLoading(true);\n    loadProducts().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadProducts]);\n\n  var deleteHandler = function deleteHandler(id) {\n    Alert.alert(\"Estas Muy Seguro?\", \"Realmente quieres eliminar este articulo de tus productos?\", [{\n      text: \"No\",\n      style: \"default\"\n    }, {\n      text: \"Si\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        dispatch(productsActions.deleteProduct(id));\n      }\n    }]);\n  };\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"An error occurred!\"), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadProducts,\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!isLoading && userProducts.length === 0) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"No hay Comida, quieres crear un nuevo platillo para la venta? que dices!\"));\n  }\n\n  return React.createElement(FlatList, {\n    data: userProducts,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    onRefresh: loadProducts,\n    refreshing: isRefreshing,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(ProductItem, {\n        image: itemData.item.imageurl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        onSelect: function onSelect() {\n          editProductHandler(itemData.item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: Colors.primary,\n        title: \"Editar\",\n        onPress: function onPress() {\n          editProductHandler(itemData.item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        color: Colors.primary,\n        title: \"Eliminar\",\n        onPress: deleteHandler.bind(_this, itemData.item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  });\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: \"Tu FOOD\",\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: \"md-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        color: Colors.accentColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Add\",\n        iconName: Platform.OS === \"android\" ? \"md-create\" : \"ios-create\",\n        onPress: function onPress() {\n          navData.navigation.navigate(\"EditProduct\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default UserProductsScreen;","map":{"version":3,"sources":["/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/screens/UserProductScreen.js"],"names":["React","useEffect","useState","useCallback","useSelector","useDispatch","HeaderButtons","Item","HeaderButton","ProductItem","Colors","productsActions","UserProductsScreen","props","userProducts","state","products","availableProducts","error","setError","isLoading","setIsLoading","isRefreshing","setIsRefreshing","dispatch","editProductHandler","id","navigation","navigate","productId","loadProducts","fetchProducts","message","unsubscribe","addListener","then","deleteHandler","Alert","alert","text","style","onPress","deleteProduct","styles","centered","primary","length","flex","justifyContent","alignItems","item","itemData","imageurl","title","price","bind","screenOptions","navData","headerTitle","headerLeft","toggleDrawer","accentColor","headerRight","Platform","OS","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  View,\n  Text,\n  FlatList,\n  Button,\n  Platform,\n  Alert,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\n\nimport HeaderButton from \"../components/UI/HeaderButton\";\nimport ProductItem from \"../components/shop/ProductItem\";\nimport Colors from \"../constants/Colors\";\nimport * as productsActions from \"../store/actions/products\";\n\nconst UserProductsScreen = (props) => {\n  const userProducts = useSelector((state) => state.products.availableProducts);\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const editProductHandler = (id) => {\n    props.navigation.navigate(\"EditProduct\", { productId: id });\n  };\n\n  const loadProducts = useCallback(async () => {\n    setError(null);\n    setIsRefreshing(true);\n    try {\n      await dispatch(productsActions.fetchProducts());\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsRefreshing(false);\n  }, [dispatch, setIsLoading, setError]);\n\n  useEffect(() => {\n    const unsubscribe = props.navigation.addListener(\"focus\", loadProducts);\n\n    return () => {\n      unsubscribe();\n    };\n  }, [loadProducts]);\n\n  useEffect(() => {\n    dispatch(productsActions.fetchProducts());\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadProducts().then(() => {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadProducts]);\n\n  const deleteHandler = (id) => {\n    Alert.alert(\n      \"Estas Muy Seguro?\",\n      \"Realmente quieres eliminar este articulo de tus productos?\",\n      [\n        { text: \"No\", style: \"default\" },\n        {\n          text: \"Si\",\n          style: \"destructive\",\n          onPress: () => {\n            dispatch(productsActions.deleteProduct(id));\n          },\n        },\n      ]\n    );\n  };\n\n  if (error) {\n    return (\n      <View style={styles.centered}>\n        <Text>An error occurred!</Text>\n        <Button\n          title=\"Try again\"\n          onPress={loadProducts}\n          color={Colors.primary}\n        />\n      </View>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\n      </View>\n    );\n  }\n\n  if (!isLoading && userProducts.length === 0) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text>\n          No hay Comida, quieres crear un nuevo platillo para la venta? que\n          dices!\n        </Text>\n      </View>\n    );\n  }\n  return (\n    <FlatList\n      data={userProducts}\n      keyExtractor={(item) => item.id}\n      onRefresh={loadProducts}\n      refreshing={isRefreshing}\n      renderItem={(itemData) => (\n        <ProductItem\n          image={itemData.item.imageurl}\n          title={itemData.item.title}\n          price={itemData.item.price}\n          onSelect={() => {\n            editProductHandler(itemData.item.id);\n          }}\n        >\n          <Button\n            color={Colors.primary}\n            title=\"Editar\"\n            onPress={() => {\n              editProductHandler(itemData.item.id);\n            }}\n          />\n          <Button\n            color={Colors.primary}\n            title=\"Eliminar\"\n            onPress={deleteHandler.bind(this, itemData.item.id)}\n          />\n        </ProductItem>\n      )}\n    />\n  );\n};\n\nexport const screenOptions = (navData) => {\n  return {\n    headerTitle: \"Tu FOOD\",\n    headerLeft: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName=\"md-menu\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n          color={Colors.accentColor}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Add\"\n          iconName={Platform.OS === \"android\" ? \"md-create\" : \"ios-create\"}\n          onPress={() => {\n            navData.navigation.navigate(\"EditProduct\");\n          }}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  centered: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\n});\n\nexport default UserProductsScreen;\n"]},"metadata":{},"sourceType":"module"}