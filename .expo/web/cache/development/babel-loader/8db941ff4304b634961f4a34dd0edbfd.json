{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/components/MealItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DefaultText from \"./DefaultText\";\nimport Colors from \"../constants/Colors\";\nimport CONFIG from \"../config\";\nvar path = process.env.NODE_ENV == \"development\" ? CONFIG.development : CONFIG.deploy;\n\nvar MealItem = function MealItem(props) {\n  var handleAccept = function handleAccept() {\n    var response, resData, error;\n    return _regeneratorRuntime.async(function handleAccept$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(path + \"/api/seller/confirm\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                idBuy: props.id\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            resData = _context.sent;\n\n            if (!resData.error) {\n              _context.next = 9;\n              break;\n            }\n\n            error = resData.msg;\n            return _context.abrupt(\"return\", alert(\"Hay Un Error\", error));\n\n          case 9:\n            props.handleChange();\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mealItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onSelectMeal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.mealRow), styles.mealHeader),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: \"data:image/gif;base64,\" + props.image\n    },\n    style: styles.bgImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, props.title, props.order), props.order == true ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \" - \") : React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Aceptar Compra\",\n    style: styles.Button,\n    onPress: handleAccept,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })))), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.mealRow), styles.mealDetail),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(DefaultText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"$ \", props.precio, \" \"), React.createElement(DefaultText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, props.fecha)))));\n};\n\nvar styles = StyleSheet.create({\n  Button: {\n    marginStart: 0,\n    paddingVertical: 0\n  },\n  mealItem: {\n    height: 200,\n    width: \"100%\",\n    backgroundColor: \"#f5f5f5\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginVertical: 10\n  },\n  bgImage: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"flex-end\"\n  },\n  mealRow: {\n    flexDirection: \"row\"\n  },\n  mealHeader: {\n    height: \"85%\"\n  },\n  mealDetail: {\n    paddingHorizontal: 10,\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n    height: \"16%\"\n  },\n  titleContainer: {\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    paddingVertical: 5,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 20,\n    color: \"white\",\n    textAlign: \"center\"\n  }\n});\nexport default MealItem;","map":{"version":3,"sources":["/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/components/MealItem.js"],"names":["React","DefaultText","Colors","CONFIG","path","process","env","NODE_ENV","development","deploy","MealItem","props","handleAccept","fetch","method","headers","body","JSON","stringify","idBuy","id","response","json","resData","error","msg","alert","handleChange","styles","mealItem","onSelectMeal","mealRow","mealHeader","uri","image","bgImage","titleContainer","title","order","primary","Button","mealDetail","precio","fecha","StyleSheet","create","marginStart","paddingVertical","height","width","backgroundColor","borderRadius","overflow","marginVertical","justifyContent","flexDirection","paddingHorizontal","alignItems","fontFamily","fontSize","color","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ImageBackground,\n  Button,\n} from \"react-native\";\n\nimport DefaultText from \"./DefaultText\";\nimport Colors from \"../constants/Colors\";\n\nimport CONFIG from \"../config\";\n\nconst path =\n  process.env.NODE_ENV == \"development\" ? CONFIG.development : CONFIG.deploy;\n\nconst MealItem = (props) => {\n  const handleAccept = async () => {\n    const response = await fetch(`${path}/api/seller/confirm`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        idBuy: props.id,\n      }),\n    });\n\n    const resData = await response.json();\n    if (resData.error) {\n      const error = resData.msg;\n      // Dispatch error\n\n      return alert(\"Hay Un Error\", error);\n    }\n    props.handleChange();\n  };\n\n  return (\n    <View style={styles.mealItem}>\n      <TouchableOpacity onPress={props.onSelectMeal}>\n        <View>\n          <View style={{ ...styles.mealRow, ...styles.mealHeader }}>\n            <ImageBackground\n              source={{ uri: `data:image/gif;base64,${props.image}` }}\n              style={styles.bgImage}\n            >\n              <View style={styles.titleContainer}>\n                <Text style={styles.title} numberOfLines={1}>\n                  {props.title}\n                  {props.order}\n                </Text>\n                {props.order == true ? (\n                  <Text> - </Text>\n                ) : (\n                  <Button\n                    color={Colors.primary}\n                    title=\"Aceptar Compra\"\n                    style={styles.Button}\n                    onPress={handleAccept}\n                  />\n                )}\n              </View>\n            </ImageBackground>\n          </View>\n\n          <View style={{ ...styles.mealRow, ...styles.mealDetail }}>\n            <DefaultText>$ {props.precio} </DefaultText>\n            <DefaultText>{props.fecha}</DefaultText>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  Button: {\n    marginStart: 0,\n    paddingVertical: 0,\n  },\n  mealItem: {\n    height: 200,\n    width: \"100%\",\n    backgroundColor: \"#f5f5f5\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginVertical: 10,\n  },\n  bgImage: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n  },\n  mealRow: {\n    flexDirection: \"row\",\n  },\n  mealHeader: {\n    height: \"85%\",\n  },\n  mealDetail: {\n    paddingHorizontal: 10,\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n    height: \"16%\",\n  },\n  titleContainer: {\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    paddingVertical: 5,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 20,\n    color: \"white\",\n    textAlign: \"center\",\n  },\n});\n\nexport default MealItem;\n"]},"metadata":{},"sourceType":"module"}