{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/App.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from \"expo-font\";\nimport thunk from \"redux-thunk\";\nimport { AppLoading } from \"expo\";\nimport { enableScreens } from \"react-native-screens\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport mealsReducer from \"./store/reducers/meals\";\nimport authReducer from \"./store/reducers/auth\";\nimport productsReducer from \"./store/reducers/products\";\nimport buyReducer from \"./store/reducers/buy\";\nimport ordersReducer from \"./store/reducers/orders\";\nenableScreens();\nvar rootReducer = combineReducers({\n  meals: mealsReducer,\n  auth: authReducer,\n  products: productsReducer,\n  buys: buyReducer,\n  orders: ordersReducer\n});\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/valentin/Documents/Proyects/pruebas/ReactNative/CUCEIEats/TEAM-SELLER/App.js"],"names":["React","useState","Font","thunk","AppLoading","enableScreens","createStore","combineReducers","applyMiddleware","Provider","composeWithDevTools","AppNavigator","mealsReducer","authReducer","productsReducer","buyReducer","ordersReducer","rootReducer","meals","auth","products","buys","orders","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEAX,aAAa;AAEb,IAAMY,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,KAAK,EAAEN,YAD2B;AAElCO,EAAAA,IAAI,EAAEN,WAF4B;AAGlCO,EAAAA,QAAQ,EAAEN,eAHwB;AAIlCO,EAAAA,IAAI,EAAEN,UAJ4B;AAKlCO,EAAAA,MAAM,EAAEN;AAL0B,CAAD,CAAnC;AAQA,IAAMO,KAAK,GAAGjB,WAAW,CACvBW,WADuB,EAEvBP,mBAAmB,CAACF,eAAe,CAACL,KAAD,CAAhB,CAFI,CAAzB;;AAKA,IAAMqB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOtB,IAAI,CAACuB,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO;AAFL,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACQ1B,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACrB2B,UADqB;AAAA,MACTC,aADS;;AAG5B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,UADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMK,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAED,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport thunk from \"redux-thunk\";\n\nimport { AppLoading } from \"expo\";\nimport { enableScreens } from \"react-native-screens\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport mealsReducer from \"./store/reducers/meals\";\nimport authReducer from \"./store/reducers/auth\";\nimport productsReducer from \"./store/reducers/products\";\nimport buyReducer from \"./store/reducers/buy\";\nimport ordersReducer from \"./store/reducers/orders\";\n\nenableScreens();\n\nconst rootReducer = combineReducers({\n  meals: mealsReducer,\n  auth: authReducer,\n  products: productsReducer,\n  buys: buyReducer,\n  orders: ordersReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => setFontLoaded(true)}\n      />\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <AppNavigator />\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}